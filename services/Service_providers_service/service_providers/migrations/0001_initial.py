# Generated by Django 5.0.1 on 2024-01-25 01:27

import django.db.models.deletion
import mptt.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceProviderSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Service Provider Specification',
                'verbose_name_plural': 'Service Provider Specifications',
            },
        ),
        migrations.CreateModel(
            name='serviceProviderType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, unique=True, verbose_name='service_provider_name')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Service Provider Type',
                'verbose_name_plural': 'Service Provider Types',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required and unique', max_length=255, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Category safe URL')),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='service_providers.servicecategory')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Service Categories',
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Required', max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='Not Required', verbose_name='description')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('address', models.CharField(help_text='Business address', max_length=255, verbose_name='Address')),
                ('phone_number', models.CharField(help_text='Contact phone number', max_length=20, verbose_name='Phone Number')),
                ('website', models.URLField(blank=True, help_text='Business website URL', null=True, verbose_name='Website')),
                ('rating', models.FloatField(blank=True, default=0, help_text='The average rating for the service provider', null=True, verbose_name='Rating')),
                ('is_active', models.BooleanField(default=True, help_text='Change service provider visibility', verbose_name='service provider visibility')),
                ('pinned_count', models.PositiveIntegerField(default=0, help_text='Number of users who pinned this service provider', verbose_name='Pinned Count')),
                ('owner', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='service_providers.servicecategory')),
                ('service_provider_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='service_providers.serviceprovidertype')),
                ('tags', models.ManyToManyField(blank=True, related_name='service_providers', to='service_providers.tag')),
            ],
            options={
                'verbose_name': 'Service_Providers',
                'verbose_name_plural': 'Service_Providers',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='images/service_providers_images/default.png', help_text='Upload a service provider image', upload_to='images/service_providers_images/', verbose_name='Image')),
                ('alt_text', models.CharField(blank=True, help_text='Please add alternative text', max_length=255, null=True, verbose_name='Alternative Text')),
                ('is_feature', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_provider_images', to='service_providers.serviceprovider')),
            ],
            options={
                'verbose_name': 'Service Provider Image',
                'verbose_name_plural': 'Service Provider Images',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='Product Name')),
                ('category', models.CharField(help_text='Required', max_length=255, verbose_name='Product Category')),
                ('price', models.DecimalField(decimal_places=2, help_text='Not Required', max_digits=10, verbose_name='Product Price')),
                ('description', models.TextField(blank=True, help_text='Not Required', verbose_name='Product Description')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='service_providers.serviceprovider')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProviderReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('rating', models.FloatField(default=0)),
                ('comment', models.TextField(default='', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_provider_reviews', to='service_providers.serviceprovider')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProviderSpecificationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Service provider specification value (maximum of 255 characters)', max_length=255, verbose_name='Value')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specification_values', to='service_providers.serviceprovider')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='service_providers.serviceproviderspecification')),
            ],
            options={
                'verbose_name': 'Service Provider Specification Value',
                'verbose_name_plural': 'Service Provider Specification Values',
            },
        ),
        migrations.AddField(
            model_name='serviceproviderspecification',
            name='service_provider_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='service_providers.serviceprovidertype'),
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_type', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn')], default='facebook', help_text='Select the social media type', max_length=20, verbose_name='Social Type')),
                ('url', models.URLField(blank=True, help_text='Enter the URL for the social media profile', null=True, verbose_name='Social Media URL')),
                ('service_provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='service_providers.serviceprovider')),
            ],
            options={
                'verbose_name': 'Social Link',
                'verbose_name_plural': 'Social Links',
            },
        ),
    ]
